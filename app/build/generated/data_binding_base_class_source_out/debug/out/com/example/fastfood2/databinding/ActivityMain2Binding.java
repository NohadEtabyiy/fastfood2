// Generated by view binder compiler. Do not edit!
package com.example.fastfood2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fastfood2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMain2Binding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView textDate;

  @NonNull
  public final TextView textFormateur;

  @NonNull
  public final TextView textHeure;

  @NonNull
  public final TextView textModule;

  @NonNull
  public final TextView textSalle;

  private ActivityMain2Binding(@NonNull LinearLayout rootView, @NonNull TextView textDate,
      @NonNull TextView textFormateur, @NonNull TextView textHeure, @NonNull TextView textModule,
      @NonNull TextView textSalle) {
    this.rootView = rootView;
    this.textDate = textDate;
    this.textFormateur = textFormateur;
    this.textHeure = textHeure;
    this.textModule = textModule;
    this.textSalle = textSalle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMain2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMain2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMain2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.text_date;
      TextView textDate = ViewBindings.findChildViewById(rootView, id);
      if (textDate == null) {
        break missingId;
      }

      id = R.id.text_formateur;
      TextView textFormateur = ViewBindings.findChildViewById(rootView, id);
      if (textFormateur == null) {
        break missingId;
      }

      id = R.id.text_heure;
      TextView textHeure = ViewBindings.findChildViewById(rootView, id);
      if (textHeure == null) {
        break missingId;
      }

      id = R.id.text_module;
      TextView textModule = ViewBindings.findChildViewById(rootView, id);
      if (textModule == null) {
        break missingId;
      }

      id = R.id.text_salle;
      TextView textSalle = ViewBindings.findChildViewById(rootView, id);
      if (textSalle == null) {
        break missingId;
      }

      return new ActivityMain2Binding((LinearLayout) rootView, textDate, textFormateur, textHeure,
          textModule, textSalle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
